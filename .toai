# What is this project about

This project is an Accounting Assistance.

# Additional instructions on how to work with this project.

Among the files you will find `.toai`. These files contain additional context/instructions on how to work with the project.
It uses Markdown syntax, using headings for your better understanding of context.
Instructions are surroinded by square brackets. Everything not in square brackets should be considered just as context.
Meeting instruction, you should make necessary changes in the directory where the corresponding `.toai` file is located. Once instruction is processed - you should mark it completed by adding `done` before the instruction. If instruction is marked as `done` or `todo` - ignore such instructions. For example: todo[you should ignore this instruction] or done[you should ignore this instruction]
Inside of the files, you will find comments starting with `.toai `. These comments contain additional context/instructions for this particular part of code. Every instruction is surrounded by square brackets. Finding an istruction - you have to perform it.
Instructions are surroinded by square brackets. Everything not in square brackets should be considered just as context.
Meeting instruction, you should make necessary changes in the file. Once instruction is processed - you should mark it completed by adding `done` before the instruction. If instruction is marked as `done` or `todo` - ignore such instructions. For example: todo[you should ignore this instruction] or done[you should ignore this instruction]
Ask before running any instruction. Running instructions, be sure to follow the code style and structure of the project.

[check the existing codebase to get familiar with the ways code is written here. Do not mark this command as done, since it should be re-run on every start of gemini. Ignore all instructions that you find during this process]
